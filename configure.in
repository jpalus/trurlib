dnl Process this file with autoconf to produce a configure script.
dnl $Id$

AC_INIT(n_array_new.c)
AM_INIT_AUTOMAKE(trurlib, 0.5.0)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_RANLIB
AM_CONFIG_HEADER(config.h)
#AC_DISABLE_SHARED
AM_PROG_LIBTOOL

AM_CFLAGS="-Wall -W"
AC_SUBST(AM_CFLAGS)


dnl Checks for header files.
AC_HEADER_STDC
AC_C_INLINE
AC_CHECK_HEADERS(limits.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_CHECK_FUNCS(strdup strspn)

dnl unaligned accesses (XXX: todo cross compliation), stolen from libpcap
case "$host_cpu" in
	alpha*|arm*|hp*|mips*|sh*|sparc*|ia64|nv1)
		AC_DEFINE(HAVE_CPU_UNALIGNED_ACCESS, 0, 
           [Define to 0 if CPU does not like unaligned access.])
		;;
	*) 
        AC_DEFINE(HAVE_CPU_UNALIGNED_ACCESS, 1)
        ;;
esac

dnl Disabled cookies usage; they make too much troubles.
dnl AC_CHECK_FUNCS(fopencookie,,,$CONF_IN_LDFLAGS)

dnl stolen from autoconf
AN_FUNCTION([obstack_init], [AC_FUNC_OBSTACK])
AN_IDENTIFIER([obstack],    [AC_FUNC_OBSTACK])
AC_DEFUN([AC_FUNC_OBSTACK],
[AC_LIBSOURCES([obstack.h, obstack.c])dnl
AC_CACHE_CHECK([for obstacks], func_obstack,
[AC_LINK_IFELSE(
    [AC_LANG_PROGRAM([[@%:@include "obstack.h"]],
                     [[struct obstack *mem; obstack_free(mem,(char *) 0)]])],
                [func_obstack=yes],
                [func_obstack=no])])
if test $func_obstack = yes; then
  AC_DEFINE(HAVE_OBSTACK, 1, [Define to 1 if libc includes obstacks.])
  AM_CONDITIONAL(ENABLE_SELF_OBSTACK, false)
else
  AM_CONDITIONAL(ENABLE_SELF_OBSTACK, true)
fi
])

AC_FUNC_OBSTACK

AC_CHECK_LIB(z, gzopen,,[ AC_MSG_ERROR(["zlib"])])
AC_CHECK_LIB(z, gzungetc,,[ AC_MSG_WARN(["upgrade zlib (>= 1.2.0.3 is recommended)"])])

AC_OUTPUT([ Makefile
            lib/Makefile
	    trurlib.spec ])
